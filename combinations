#!/usr/bin/env python

import sys
import itertools
import subprocess
import time

port = sys.argv[1]
jail = sys.argv[2]
portdir = "/usr/ports/" + port

optdir = "/usr/local/etc/poudriere.d/options/"
optsubdir = port.replace("/", "_")

process = subprocess.Popen(['make', '-C', portdir, '-V', 'OPTIONS_DEFINE'], stdout=subprocess.PIPE)
stdout, stderr = process.communicate()
std_options = stdout.split()

process = subprocess.Popen(['make', '-C', portdir, '-V', 'OPTIONS_SINGLE'], stdout=subprocess.PIPE)
stdout, stderr = process.communicate()
single_options_list = stdout.split()
single_options = []

for x in single_options_list:
    process = subprocess.Popen(['make', '-C', portdir, '-V', 'OPTIONS_SINGLE_' + x], stdout=subprocess.PIPE)
    stdout, stderr = process.communicate()
    single_options = single_options + stdout.split()

process = subprocess.Popen(['make', '-C', portdir, '-V', 'COMPLETE_OPTIONS_LIST'], stdout=subprocess.PIPE)
stdout, stderr = process.communicate()
complete_options_list = stdout.split()

process = subprocess.Popen(['make', '-C', portdir, '-V', 'PKGNAME'], stdout=subprocess.PIPE)
stdout, stderr = process.communicate()
pkgname = stdout.split()

header = """# This file is auto-generated by 'make config'.
# Options for %(pkgname)s
_OPTIONS_READ=%(pkgname)s
_FILE_COMPLETE_OPTIONS_LIST=%(complete_options_list)s
""" % { "pkgname": pkgname[0], "complete_options_list": ' '.join([str(x) for x in complete_options_list]) }

def combos(std_options=(), header=""):
    for x in range (0, len(std_options)+1):
        comb = itertools.combinations(std_options, x)
        for c in comb:
            string = header
            for y in std_options:
                if y in c:
                    string += "OPTIONS_FILE_SET+=" + y + "\n"
                if y not in c:
                    string += "OPTIONS_FILE_UNSET+=" + y + "\n"
            yield string

def singles(single_options=()):
    for a in single_options:
        string = ""
        for b in single_options:
            if a == b:
                string += "OPTIONS_FILE_SET+=" + a + "\n"
            else:
                string += "OPTIONS_FILE_UNSET+=" + b + "\n"
        yield string

for x in singles(single_options):
    for y in combos(std_options, header):
        target = open(optdir + optsubdir + "/options", 'w')
        target.truncate
        target.write(y)
        target.write(x)
        target.close()
        time.sleep(5)
        rc = subprocess.call(["nice", "sudo", "poudriere", "testport", "-n", "-j", jail, "-o", port])
        if rc != 0:
          sys.exit(1)

sys.exit(0)
